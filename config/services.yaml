  # This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    acme_user.activity_listener.class: test\UserBundle\EventListener\ActivityListener
    my_user_provider.class: danvbe\UserBundle\Security\Core\User\FOSUBUserProvider

    # For Github you'll need the client_id and secret   
    #github_client_id: <replace-with-your-github-client-id>
    #github_secret: <replace-with-your-github-secret>
    
    # For Facebook you'll need the client_id and secret   
    facebook_client_id: <190313655659640>
    facebook_secret: <replace-with-your-facebook-secret>
    
    # For Google+ you'll need the client_id and secret   
    ##googleplus_client_id: <replace-with-your-googleplus-client-id>
    ##googleplus_secret: <replace-with-your-googleplus-secret>
    
    # For Stack Exchange you'll need the client_id, secret and key
    #stackexchange_client_id: <replace-with-your-stackexchange-client-id>
    #stackexchange_secret: <replace-with-your-stackexchange-secret>
    #stackexchange_key: <replace-with-your-stackexchange-key>

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
    app.fos_user.oauth_provider:
        # Change the class according to the location of the FOSUBUserProvider class
        class: AppBundle\Entity\FOSUBUserProvider
        arguments:
            # Inject as first argument the user_manager of FOSUserBundle
            user_manager: "@fos_user.user_manager"
            # An object/array with the registered Social Media from config.yml
            user_response:
               ### github: github_id
                facebook: facebook_id
               # googleplus: googleplus_id 
                #stackexchange: stackexchange_id
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
   ### ###acme_user.activity_listener:
       ## class: %acme_user.activity_listener.class%
       # arguments: ['@security.context','@fos_user.user_manager']
       ### tags:
          ##  - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }
   # my_user_provider:
        #class: "%my_user_provider.class%"
        #this is the place where the properties are passed to the UserProvider - see config.yml
        #arguments: ['@fos_user.user_manager',{facebook: facebook_id, google: google_id}]
    #my.oauth_aware.user_provider.service:
   # class: HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider
    #arguments:
       # - '@fos_user.user_manager'
        #- ['pass properties as array']
    